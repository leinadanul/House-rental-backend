
    def add_property(self, property: Property) -> Property:
        cur = self.connection.cursor()

        host
        cur.execute(
            """INSERT INTO host(name, phone_number, email) VALUES (%(name)s, %(phone_number)s, %(email)s) RETURNING id""",
            {
                "name": host.name,
                "phone_number": host.phone_number,
                "email": host.email,
            },
        )
        distribution   
        cur.execute(
                """INSERT INTO distributions(name, description) VALUES (%(name)s, %(description)s) RETURNING id""",
                {
                    "name": distribution.name,
                    "description": distribution.description,
                },
            )
        features
        cur.execute(
                """INSERT INTO features(name, description) VALUES (%(name)s, %(description)s) RETURNING id""",
                {
                    "name": feature.name,
                    "description": feature.description,
                },
            )
        fees
        cur.execute(
                """INSERT INTO fees(name, description, price) VALUES (%(name)s, %(description)s, %(price)s) RETURNING id""",
                {
                    "name": fee.name,
                    "description": fee.description,
                    "price": fee.price,
                },
            )
        property_distributions
        cur.execute(
                """INSERT INTO property_distributions(property_id, distribution_id) VALUES (%(property_id)s, %(distribution_id)s)""",
                {
                    "property_id": property_id,
                    "distribution_id": distribution_id,
                },
            )
        property
        cur.execute(
            """INSERT INTO property(
            name, country, state, city, address, capacity, unavailable_days, price, host_id, landlord_id, property_type_id)
            VALUES (%(name)s, %(country)s, %(state)s, %(city)s, %(address)s, %(capacity)s, %(unavailable_days)s, %(price)s, %(host_id)s, %(landlord_id)s, %(property_type_id)s) RETURNING id""",
            {
                "name": property.name,
                "country": property.country,
                "state": property.state,
                "city": property.city,
                "address": property.address,
                "capacity": property.capacity,
                "unavailable_days": property.unavailable_days,
                "price": property.price,
                "host_id": host_id,
                "landlord_id": property.landlord_id,
                "property_type_id": property.property_type_id,
            },
        )


        fetch one
            host_id = cur.fetchone()[0]
            features_id = cur.fetchone()[0]
            fees_id = cur.fetchone()[0]
            property_type_id = cur.fetchone()[0]
try:

except Exception as error:
        print(f"Error: {error}")
        self.connection.rollback()
